
   CREATE SEQUENCE  "DGMARCU2"."MARATHON_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  GLOBAL ;


   CREATE SEQUENCE  "DGMARCU2"."RUNNER_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  GLOBAL ;



  CREATE TABLE "DGMARCU2"."AS2_MARATHON" 
   (	"MARATHON_ID" NUMBER NOT NULL ENABLE, 
	"MARATHON_NM" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"LENGTH_IN_MILES" NUMBER NOT NULL ENABLE, 
	"START_DT" DATE, 
	"START_LOCATION" VARCHAR2(200 BYTE), 
	"END_LOCATION" VARCHAR2(200 BYTE), 
	 CONSTRAINT "AS2_MARATHON_PK" PRIMARY KEY ("MARATHON_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "AS2_MARATHON_LENGTH_CHK" CHECK (LENGTH_IN_MILES >= 1) ENABLE, 
	 CONSTRAINT "AS2_MARATHON_LOCATION_CHK1" CHECK (START_LOCATION IN ('East Champaign', 'West Champaign', 'East Urbana', 'West Urbana', 'St Josephs', 'Danville')) ENABLE, 
	 CONSTRAINT "AS2_MARATHON_LOCATION_CHK2" CHECK (END_LOCATION IN ('East Champaign', 'West Champaign', 'East Urbana', 'West Urbana', 'St Josephs', 'Danville')) ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "DGMARCU2"."AS2_MARATHON"."START_DT" IS 'ASSUMES MARATHONS FROM ANY POINT IN TIME, INCLUDING MARATHONS THAT OCCURRED IN THE PAST, CAN BE ADDED TO THE DATABASE';

  CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."MARATHON_TRIG1" 
    BEFORE INSERT ON AS2_MARATHON
    FOR EACH ROW
DECLARE
BEGIN
    IF( :NEW.MARATHON_ID IS NULL )
    THEN
        :NEW.MARATHON_ID := MARATHON_ID_SEQ.NEXTVAL;
    END IF;
END;
/
ALTER TRIGGER "DGMARCU2"."MARATHON_TRIG1" ENABLE;



  CREATE TABLE "DGMARCU2"."AS2_RUNNER" 
   (	"RUNNER_ID" NUMBER NOT NULL ENABLE, 
	"LAST_NM" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"FIRST_NM" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"STREET_ADDRESS" VARCHAR2(300 BYTE), 
	"CITY" VARCHAR2(200 BYTE), 
	"STATE" CHAR(2 BYTE), 
	"ZIP" VARCHAR2(10 BYTE), 
	"WORK_PHONE" VARCHAR2(10 BYTE), 
	 CONSTRAINT "AS2_RUNNER_PK" PRIMARY KEY ("RUNNER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "AS2_RUNNER_WORK_PHONE_CHK1" CHECK (REGEXP_LIKE(WORK_PHONE, '[0-9]{3}-?[0-9]{3}-?[0-9]{4}')) ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "DGMARCU2"."AS2_RUNNER"."STATE" IS 'ASSUMING ALL RUNNERS RESIDE WITHIN THE UNITED STATES';
   COMMENT ON COLUMN "DGMARCU2"."AS2_RUNNER"."ZIP" IS 'ASSUMING ALL RUNNERS RESIDE WITHIN THE UNITED STATES';
   COMMENT ON COLUMN "DGMARCU2"."AS2_RUNNER"."WORK_PHONE" IS 'ASSUMING ALL RUNNERS RESIDE WITHIN THE UNITED STATES';

  CREATE OR REPLACE EDITIONABLE TRIGGER "DGMARCU2"."RUNNER_TRIG1" 
    BEFORE INSERT ON AS2_RUNNER
    FOR EACH ROW
DECLARE
BEGIN
    IF( :NEW.RUNNER_ID IS NULL )
    THEN
        :NEW.RUNNER_ID := RUNNER_ID_SEQ.NEXTVAL;
    END IF;
END;
/
ALTER TRIGGER "DGMARCU2"."RUNNER_TRIG1" ENABLE;



  CREATE TABLE "DGMARCU2"."AS2_REGISTRATION" 
   (	"ACTUAL_TIME" NUMBER, 
	"PLACEMENT" NUMBER, 
	"RUNNER_ID" NUMBER NOT NULL ENABLE, 
	"MARATHON_ID" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "AS2_REGISTERS_PK" PRIMARY KEY ("RUNNER_ID", "MARATHON_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "AS2_REGISTERS_FK1" FOREIGN KEY ("MARATHON_ID")
	  REFERENCES "DGMARCU2"."AS2_MARATHON" ("MARATHON_ID") ON DELETE CASCADE ENABLE, 
	 CONSTRAINT "AS2_REGISTERS_FK2" FOREIGN KEY ("RUNNER_ID")
	  REFERENCES "DGMARCU2"."AS2_RUNNER" ("RUNNER_ID") ON DELETE CASCADE ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "DGMARCU2"."AS2_REGISTRATION"."ACTUAL_TIME" IS 'Records number of seconds it took the runner to complete the marathon. This number can then be converted to h:m:s';



  CREATE TABLE "DGMARCU2"."AS2_RUNNER_AWARDS" 
   (	"AWARDS" VARCHAR2(400 BYTE) NOT NULL ENABLE, 
	"RUNNER_PK" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "AS2_AWARDS_PK" PRIMARY KEY ("RUNNER_PK", "AWARDS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "AS2_RUNNER_AWARDS_FK1" FOREIGN KEY ("RUNNER_PK")
	  REFERENCES "DGMARCU2"."AS2_RUNNER" ("RUNNER_ID") ON DELETE CASCADE ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
